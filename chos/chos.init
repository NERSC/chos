#!/bin/sh
# chkconfig: 2345 26 74
#
#CHOS (c) 2004, The Regents of the University of California, through
# Lawrence Berkeley National Laboratory (subject to receipt of any
# required approvals from the U.S. Dept. of Energy).  All rights
# reserved.
# 
# If you have questions about your rights to use or distribute this
# software, please contact Berkeley Lab's Technology Transfer
# Department at  TTD@lbl.gov referring to "CHOS (LBNL Ref CR-2025)"
# 
# NOTICE.  This software was developed under funding from the U.S.
# Department of Energy.  As such, the U.S. Government has been granted
# for itself and others acting on its behalf a paid-up, nonexclusive,
# irrevocable, worldwide license in the Software to reproduce, prepare
# derivative works, and perform publicly and display publicly.
# Beginning five (5) years after the date permission to assert
# copyright is obtained from the U.S. Department of Energy, and subject
# to any subsequent five (5) year renewals, the U.S. Government is
# granted for itself and others acting on its behalf a paid-up,
# nonexclusive, irrevocable, worldwide license in the Software to
# reproduce, prepare derivative works, distribute copies to the public,
# perform publicly and display publicly, and to permit others to do so.
# 
#
# description: chos is used for supporting multiple installations concurrently
#

# source function library
. /etc/rc.d/init.d/functions

CONF=/etc/chos
[ -f /etc/sysconfig/chos ] && . /etc/sysconfig/chos

RETVAL=0

start() {
	echo $"Starting up chos: "
	echo -n $"Loading chos module: "
	/sbin/modprobe chos &>/dev/null
	[ $? ] && success || failure
	echo

	echo -n $"Creating chos structure: "
	mountlocal
	makelinks	
	RETVAL=$?
	[ $RETVAL ] && success || failure
	[ $RETVAL ] && touch /var/lock/subsys/chos
	echo

	echo -n $"Loading valid OS directories: "
	loadvalid
	[ $? ] && success || failure
	echo
}

stop() {
	echo -n $"Shutting down chos: "
	unmountlocal
	/sbin/modprobe -r chos &>/dev/null
	RETVAL=$?
	[ $RETVAL ] && success || failure
	[ $RETVAL ] && rm -f /var/lock/subsys/chos
	echo
}

dostatus() {
	count=`lsmod|grep -c chos`
        if [ $count -eq 1 ] ; then 
		echo "CHOS is loaded"
	else
		echo "CHOS is not loaded"
        fi
	RETVAL=$?
}

reload() {
	echo $"Reloading Valid configs for chos: "
	loadvalid
}
restart() {
	stop
	start
	RETVAL=$?
}

condrestart() {
	[ -e /var/lock/subsys/chos ] && restart || :
}

loadvalid() {
	if [ -e $CONF ] ; then
		echo "-" >> /proc/chos/valid

		list=`cat /etc/chos| awk -F: \
			'{if (/^#/){next};
			  if (/^$/){next};
			  if (/^%/){start=0};
			  if (start==1){print $2};
			  if ($1="%SHELLS"){start=1}
			 }'|sort|uniq`

		echo -n "Adding: "
		for line in $list ; do
			echo -n "$line"
  			echo $line >> /proc/chos/valid
		done
		echo ""
	fi
}


mountlocal() {
	if [ ! -z "$BINDMOUNT" ] ; then
		for d in $(echo $BINDMOUNT)
		do
			[ -d /chos/$d ] || mkdir /chos/$d
			mount --bind $d /chos/$d
		done
	fi
}

unmountlocal() {
	export LANG=C

	if [ ! -z "$BINDMOUNT" ] ; then
		for d in $(echo $BINDMOUNT|sed 's/ /\n/g'|sort -r)
		do
			umount /chos/$d
		done
	fi
}

makelinks() {
  for dir in `ls /|grep -v chos|grep -v lost+found|grep -v afs`
  do
    if [ ! -e "/chos/$dir" ] ; then
      if [ ! -h "/chos/$dir" ] ; then
        ln -s /proc/chos/link/$dir /chos/$dir
      fi
    fi
  done
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
	dostatus
	;;
  reload)
	reload
	;;
  restart)
	restart
	;;
  condrestart)
	condrestart
	;;
  *)
	echo "Usage: chos.init {start|stop|status|restart|reload|condrestart}"
	exit 1
esac

exit $RETVAL
